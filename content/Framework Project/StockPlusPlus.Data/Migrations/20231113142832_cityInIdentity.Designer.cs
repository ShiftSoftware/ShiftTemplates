// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockPlusPlus.Data;

#nullable disable

namespace StockPlusPlus.Data.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20231113142832_cityInIdentity")]
    partial class cityInIdentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShiftSoftware.ShiftEntity.EFCore.Entities.DeletedRowLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("ContainerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastReplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartitionKeyLevelOneType")
                        .HasColumnType("int");

                    b.Property<string>("PartitionKeyLevelOneValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartitionKeyLevelThreeType")
                        .HasColumnType("int");

                    b.Property<string>("PartitionKeyLevelThreeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartitionKeyLevelTwoType")
                        .HasColumnType("int");

                    b.Property<string>("PartitionKeyLevelTwoValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RowID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("LastReplicationDate");

                    b.ToTable("DeletedRowLogs");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.AccessTree", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<string>("Tree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("IsDeleted = 0");

                    b.ToTable("AccessTrees", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.App", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AppSecret")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("RedirectUri")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AppId")
                        .IsUnique()
                        .HasFilter("IsDeleted = 0");

                    b.ToTable("Apps", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.City", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<bool>("BuiltIn")
                        .HasColumnType("bit");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long>("RegionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RegionID");

                    b.ToTable("Cities", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.Company", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("AlternativeExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BuiltIn")
                        .HasColumnType("bit");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HQAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HQEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HQPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("LegalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Companies", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranch", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BuiltIn")
                        .HasColumnType("bit");

                    b.Property<long?>("CityID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("RegionID");

                    b.ToTable("CompanyBranches", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranchDepartment", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("DepartmentID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CompanyBranchID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("CompanyBranchDepartments", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranchService", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CompanyBranchID");

                    b.HasIndex("ServiceID");

                    b.ToTable("CompanyBranchServices", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.Department", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Departments", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.Region", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<bool>("BuiltIn")
                        .HasColumnType("bit");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Regions", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.Service", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Services", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("AccessTree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("BuiltIn")
                        .HasColumnType("bit");

                    b.Property<long>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LockDownUntil")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<bool>("RequireChangePassword")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyBranchID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("RegionID");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("IsDeleted = 0");

                    b.ToTable("Users", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.UserAccessTree", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long>("AccessTreeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AccessTreeID");

                    b.HasIndex("UserID");

                    b.ToTable("UserAccessTrees", "ShiftIdentity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("StockPlusPlus.Data.Entities.Country", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Countries");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("StockPlusPlus.Data.Entities.Product.Brand", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Brands");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("StockPlusPlus.Data.Entities.Product.Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long>("BrandID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryOfOriginID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long>("ProductCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ReleaseDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TrackingMethod")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CountryOfOriginID");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("Products");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("StockPlusPlus.Data.Entities.Product.ProductCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyBranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastReplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastSaveDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastSavedByUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Photos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegionID")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrackingMethod")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ProductCategories");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.City", b =>
                {
                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranch", b =>
                {
                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.City", "City")
                        .WithMany("CompanyBranches")
                        .HasForeignKey("CityID");

                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.Company", "Company")
                        .WithMany("CompanyBranches")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.Region", "Region")
                        .WithMany("CompanyBranches")
                        .HasForeignKey("RegionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Company");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranchDepartment", b =>
                {
                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranch", "CompanyBranch")
                        .WithMany("CompanyBranchDepartments")
                        .HasForeignKey("CompanyBranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CompanyBranch");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranchService", b =>
                {
                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranch", "CompanyBranch")
                        .WithMany("CompanyBranchServices")
                        .HasForeignKey("CompanyBranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CompanyBranch");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.User", b =>
                {
                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranch", "CompanyBranch")
                        .WithMany()
                        .HasForeignKey("CompanyBranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("CompanyBranch");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.UserAccessTree", b =>
                {
                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.AccessTree", "AccessTree")
                        .WithMany()
                        .HasForeignKey("AccessTreeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftSoftware.ShiftIdentity.Core.Entities.User", "User")
                        .WithMany("AccessTrees")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccessTree");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockPlusPlus.Data.Entities.Product.Product", b =>
                {
                    b.HasOne("StockPlusPlus.Data.Entities.Product.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockPlusPlus.Data.Entities.Country", "CountryOfOrigin")
                        .WithMany()
                        .HasForeignKey("CountryOfOriginID");

                    b.HasOne("StockPlusPlus.Data.Entities.Product.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("CountryOfOrigin");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.City", b =>
                {
                    b.Navigation("CompanyBranches");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.Company", b =>
                {
                    b.Navigation("CompanyBranches");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.CompanyBranch", b =>
                {
                    b.Navigation("CompanyBranchDepartments");

                    b.Navigation("CompanyBranchServices");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.Region", b =>
                {
                    b.Navigation("CompanyBranches");
                });

            modelBuilder.Entity("ShiftSoftware.ShiftIdentity.Core.Entities.User", b =>
                {
                    b.Navigation("AccessTrees");
                });
#pragma warning restore 612, 618
        }
    }
}
